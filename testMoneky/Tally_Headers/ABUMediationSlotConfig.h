//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "ABUMediationSlotConfigInfo-Protocol.h"

@class NSArray, NSDictionary, NSNumber, NSString;

@interface ABUMediationSlotConfig : NSObject <ABUMediationSlotConfigInfo>
{
    _Bool _multilevelAfterP;
    _Bool _isBackup;
    NSString *_ritId;
    long long _ritType;
    long long _lookTime;
    double _layerTimeOut;
    double _layerTimeRate;
    double _totalTimeOut;
    double _totalTimeRate;
    double _reqInterval;
    double _biddingTimeout;
    double _cacheTimeOut;
    double _timeMin;
    long long _waterfallId;
    NSString *_version;
    long long _reqType;
    NSString *_waterfallExtra;
    NSNumber *_segmentId;
    NSString *_segmentVersion;
    NSDictionary *_waterfallAbtest;
    long long _waterfallTimingMode;
    long long _waterfallShowRulesVersion;
    NSArray *_waterfallShowFreqctlRules;
    NSArray *_waterfallShowPacingRules;
    long long _refreshTime;
    double _multilevelTimeout;
    double _bidFloor;
    long long _parallelType;
    unsigned long long _reqParallelNum;
    long long _rewardCallbackType;
    long long _rewardStartTime;
    long long _adCount;
    long long _isAdPrime;
    long long _groupType;
    long long _rewardAgainStyleId;
    long long _isRewardAgain;
    long long _rewardAgainMaxCount;
    double _rewardAgainEcpm;
    long long _rewardAgainMaxCountOneHour;
    double _rewardAgainInterval;
    double _rewardAgainRange;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) double rewardAgainRange; // @synthesize rewardAgainRange=_rewardAgainRange;
@property(readonly, nonatomic) double rewardAgainInterval; // @synthesize rewardAgainInterval=_rewardAgainInterval;
@property(readonly, nonatomic) long long rewardAgainMaxCountOneHour; // @synthesize rewardAgainMaxCountOneHour=_rewardAgainMaxCountOneHour;
@property(readonly, nonatomic) double rewardAgainEcpm; // @synthesize rewardAgainEcpm=_rewardAgainEcpm;
@property(readonly, nonatomic) long long rewardAgainMaxCount; // @synthesize rewardAgainMaxCount=_rewardAgainMaxCount;
@property(readonly, nonatomic) long long isRewardAgain; // @synthesize isRewardAgain=_isRewardAgain;
@property(readonly, nonatomic) long long rewardAgainStyleId; // @synthesize rewardAgainStyleId=_rewardAgainStyleId;
@property(readonly, nonatomic) long long groupType; // @synthesize groupType=_groupType;
@property(readonly, nonatomic) long long isAdPrime; // @synthesize isAdPrime=_isAdPrime;
@property(nonatomic) long long adCount; // @synthesize adCount=_adCount;
@property(nonatomic) long long rewardStartTime; // @synthesize rewardStartTime=_rewardStartTime;
@property(nonatomic) long long rewardCallbackType; // @synthesize rewardCallbackType=_rewardCallbackType;
@property(readonly, nonatomic) _Bool isBackup; // @synthesize isBackup=_isBackup;
@property(readonly, nonatomic) unsigned long long reqParallelNum; // @synthesize reqParallelNum=_reqParallelNum;
@property(readonly, nonatomic) long long parallelType; // @synthesize parallelType=_parallelType;
@property(readonly, nonatomic) double bidFloor; // @synthesize bidFloor=_bidFloor;
@property(readonly, nonatomic) double multilevelTimeout; // @synthesize multilevelTimeout=_multilevelTimeout;
@property(readonly, nonatomic) _Bool multilevelAfterP; // @synthesize multilevelAfterP=_multilevelAfterP;
@property(readonly, nonatomic) long long refreshTime; // @synthesize refreshTime=_refreshTime;
@property(readonly, copy, nonatomic) NSArray *waterfallShowPacingRules; // @synthesize waterfallShowPacingRules=_waterfallShowPacingRules;
@property(readonly, copy, nonatomic) NSArray *waterfallShowFreqctlRules; // @synthesize waterfallShowFreqctlRules=_waterfallShowFreqctlRules;
@property(readonly, nonatomic) long long waterfallShowRulesVersion; // @synthesize waterfallShowRulesVersion=_waterfallShowRulesVersion;
@property(readonly, nonatomic) long long waterfallTimingMode; // @synthesize waterfallTimingMode=_waterfallTimingMode;
@property(readonly, copy, nonatomic) NSDictionary *waterfallAbtest; // @synthesize waterfallAbtest=_waterfallAbtest;
@property(readonly, copy, nonatomic) NSString *segmentVersion; // @synthesize segmentVersion=_segmentVersion;
@property(readonly, nonatomic) NSNumber *segmentId; // @synthesize segmentId=_segmentId;
@property(readonly, copy, nonatomic) NSString *waterfallExtra; // @synthesize waterfallExtra=_waterfallExtra;
@property(readonly, nonatomic) long long reqType; // @synthesize reqType=_reqType;
@property(readonly, copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(readonly, nonatomic) long long waterfallId; // @synthesize waterfallId=_waterfallId;
@property(readonly, nonatomic) double timeMin; // @synthesize timeMin=_timeMin;
@property(readonly, nonatomic) double cacheTimeOut; // @synthesize cacheTimeOut=_cacheTimeOut;
@property(readonly, nonatomic) double biddingTimeout; // @synthesize biddingTimeout=_biddingTimeout;
@property(readonly, nonatomic) double reqInterval; // @synthesize reqInterval=_reqInterval;
@property(readonly, nonatomic) double totalTimeRate; // @synthesize totalTimeRate=_totalTimeRate;
@property(readonly, nonatomic) double totalTimeOut; // @synthesize totalTimeOut=_totalTimeOut;
@property(readonly, nonatomic) double layerTimeRate; // @synthesize layerTimeRate=_layerTimeRate;
@property(readonly, nonatomic) double layerTimeOut; // @synthesize layerTimeOut=_layerTimeOut;
@property(readonly, nonatomic) long long lookTime; // @synthesize lookTime=_lookTime;
@property(readonly, nonatomic) long long ritType; // @synthesize ritType=_ritType;
@property(readonly, copy, nonatomic) NSString *ritId; // @synthesize ritId=_ritId;
- (double)check:(double)arg1 WithMin:(double)arg2 andMax:(double)arg3 andDefault:(double)arg4;
- (id)initWithDictionary:(id)arg1;
- (id)initWithSplashMediationRit:(id)arg1;
- (id)init;
- (id)mediationSlotConfig;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

