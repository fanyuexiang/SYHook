//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIColor.h>

@class NSString;

@interface UIColor (JXAdd)
+ (id)sk_colorLinearGradientWithBeginColor:(id)arg1 endColor:(id)arg2 coefficient:(double)arg3;
+ (id)sk_regetColorDifferenceWithBeginColor:(id)arg1 endColor:(id)arg2;
+ (id)sk_regetColorRGBDictionary:(id)arg1;
+ (id)sk_colorWithHexString:(id)arg1 alpha:(double)arg2;
+ (id)sk_colorWithHexString:(id)arg1;
+ (id)findColorWithDicInfo:(id)arg1;
+ (id)correspondColors;
+ (id)correspondColorWithModel:(id)arg1;
+ (id)prioritySeries;
+ (long long)priorityIndex:(id)arg1;
+ (id)gdt_getOptimizedColorWithColors:(id)arg1;
+ (void)gdt_getPaletteColorWithImage:(id)arg1 resizeArea:(double)arg2 mode:(long long)arg3 withCallBack:(CDUnknownBlockType)arg4;
+ (void)gdt_getPaletteColorWithImage:(id)arg1 mode:(long long)arg2 withCallBack:(CDUnknownBlockType)arg3;
+ (void)gdt_getPaletteColorWithImage:(id)arg1 resizeArea:(double)arg2 block:(CDUnknownBlockType)arg3;
+ (void)gdt_getPaletteColorWithImage:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)gdt_colorWithHexString:(id)arg1 alpha:(double)arg2;
+ (id)gdt_colorWithHexString:(id)arg1;
+ (id)gdt_colorWithHex:(long long)arg1 alpha:(double)arg2;
+ (id)gdt_colorWithHex:(long long)arg1;
+ (id)LOT_colorByLerpingFromColor:(id)arg1 toColor:(id)arg2 amount:(double)arg3;
+ (id)LOT_colorWithName:(id)arg1;
+ (id)LOT_colorWithHexString:(id)arg1;
+ (id)LOT_colorWithRGBHex:(unsigned int)arg1;
+ (id)LOT_randomColor;
+ (id)LOT_colorWithString:(id)arg1;
+ (id)searchForColorByName:(id)arg1;
+ (id)BaiduMobAd_colorByLerpingFromColor:(id)arg1 toColor:(id)arg2 amount:(double)arg3;
+ (id)BaiduMobAd_colorWithName:(id)arg1;
+ (id)BaiduMobAd_colorWithHexString:(id)arg1;
+ (id)BaiduMobAd_colorWithRGBHex:(unsigned int)arg1;
+ (id)BaiduMobAd_randomColor;
+ (id)BaiduMobAd_colorWithString:(id)arg1;
+ (id)searchForColorByName:(id)arg1;
+ (id)smartColourWithRGBHex:(unsigned int)arg1 alpha:(double)arg2;
+ (id)smartColorWithHexString:(id)arg1 alpha:(double)arg2;
+ (id)smartColorWithHexString:(id)arg1;
+ (id)wvTransparentColor;
+ (id)wvColorWithHexString:(id)arg1;
+ (id)wvColorWithHex:(long long)arg1 alpha:(double)arg2;
+ (id)wvColorWithHex:(long long)arg1;
+ (id)abu_colorWithHexString:(id)arg1;
+ (id)bu_colorWithHexString:(id)arg1;
+ (id)bu_colorWithHexString:(id)arg1 alpha:(double)arg2;
+ (id)bu_colorWithHEX:(unsigned long long)arg1 alpha:(double)arg2;
+ (id)bu_colorWithHEX:(unsigned long long)arg1;
@property(readonly, nonatomic) double jx_alpha;
@property(readonly, nonatomic) double jx_blue;
@property(readonly, nonatomic) double jx_green;
@property(readonly, nonatomic) double jx_red;
@property(readonly, copy, nonatomic) NSString *sd_hexString;
- (id)LOT_hexStringValue;
- (id)LOT_stringFromColor;
- (id)LOT_colorByDarkeningToColor:(id)arg1;
- (id)LOT_colorByLighteningToColor:(id)arg1;
- (id)LOT_colorByAddingColor:(id)arg1;
- (id)LOT_colorByMultiplyingByColor:(id)arg1;
- (id)LOT_colorByDarkeningTo:(double)arg1;
- (id)LOT_colorByLighteningTo:(double)arg1;
- (id)LOT_colorByAdding:(double)arg1;
- (id)LOT_colorByMultiplyingBy:(double)arg1;
- (id)LOT_colorByDarkeningToRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)LOT_colorByLighteningToRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)LOT_colorByAddingRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)LOT_colorByMultiplyingByRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)LOT_colorByLuminanceMapping;
@property(readonly, nonatomic) unsigned int rgbHex;
@property(readonly, nonatomic) double alpha;
@property(readonly, nonatomic) double white;
@property(readonly, nonatomic) double blue;
@property(readonly, nonatomic) double green;
@property(readonly, nonatomic) double red;
- (_Bool)LOT_red:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
- (id)LOT_arrayFromRGBAComponents;
@property(readonly, nonatomic) _Bool canProvideRGBComponents;
- (id)LOT_colorSpaceString;
@property(readonly, nonatomic) int colorSpaceModel;
- (id)BaiduMobAd_hexStringValue;
- (id)BaiduMobAd_stringFromColor;
- (id)BaiduMobAd_colorByDarkeningToColor:(id)arg1;
- (id)BaiduMobAd_colorByLighteningToColor:(id)arg1;
- (id)BaiduMobAd_colorByAddingColor:(id)arg1;
- (id)BaiduMobAd_colorByMultiplyingByColor:(id)arg1;
- (id)BaiduMobAd_colorByDarkeningTo:(double)arg1;
- (id)BaiduMobAd_colorByLighteningTo:(double)arg1;
- (id)BaiduMobAd_colorByAdding:(double)arg1;
- (id)BaiduMobAd_colorByMultiplyingBy:(double)arg1;
- (id)BaiduMobAd_colorByDarkeningToRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)BaiduMobAd_colorByLighteningToRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)BaiduMobAd_colorByAddingRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)BaiduMobAd_colorByMultiplyingByRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)BaiduMobAd_colorByLuminanceMapping;
- (_Bool)BaiduMobAd_red:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
- (id)BaiduMobAd_arrayFromRGBAComponents;
- (id)BaiduMobAd_colorSpaceString;
- (id)wvHexString;
@property(readonly, copy, nonatomic) NSString *sdBu_hexString;
@end

