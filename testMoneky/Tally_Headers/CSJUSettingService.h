//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "EBAppLogDelegateProtocol-Protocol.h"

@class BUThreadSafeDictionary, CSJABTest, CSJClogConfigModel, CSJInsertJSConfigModel, CSJLogRateConfigModel, NSArray, NSDate, NSDictionary, NSLock, NSNumber, NSString;

@interface CSJUSettingService : NSObject <EBAppLogDelegateProtocol>
{
    _Bool _isReadVideoFromCache;
    _Bool _pitaya_init;
    _Bool _silenceSDK;
    _Bool _isGrey;
    _Bool _collectCrash;
    _Bool _checkTypeOpen;
    _Bool _disable_dynamic_code_group;
    _Bool _isInitCrashModule;
    _Bool _lpNewStyle;
    _Bool _haveSending;
    _Bool _activeFromBackground;
    NSString *_consent_url;
    NSString *_pitaya_host;
    NSString *_pitaya_cer_host;
    NSString *_adsUrl;
    BUThreadSafeDictionary *_configList;
    NSString *_xpath;
    NSDictionary *_policy;
    NSNumber *_vbtt;
    NSString *_appLogUrl;
    NSString *_cohort_id;
    NSString *_apmOverseaUrl;
    CSJABTest *_abtest;
    NSArray *_playableInterceptAry;
    NSString *_purePyloadH5;
    NSDictionary *_headersExt;
    long long _bothOpen;
    long long _supportTNC;
    NSString *_privacy_url;
    long long _max_tpl_cnts;
    long long _fetch_tpl_timeout_ctrl;
    NSString *_force_language;
    long long _circle_time;
    long long _circle_splash;
    NSArray *_scheme_wlist;
    long long _icon_show_time;
    NSArray *_gecko_hosts;
    long long _dynamic_code_group_cache_time;
    long long _webViewPoolCacheMaxCount;
    long long _webViewRenderMaxConcurrentOperationCount;
    long long _rotateBannerDislike;
    long long _sdMaxMemoryCount;
    long long _video_cache_splash_num;
    long long _video_cache_reward_num;
    long long _video_cache_brand_num;
    long long _video_cache_other_num;
    long long _sdMaxMemoryCost;
    long long _enable_bw_screen_detection;
    CSJInsertJSConfigModel *_insertJSConfig;
    CSJClogConfigModel *_clogConfig;
    NSArray *_network_id_list;
    CSJLogRateConfigModel *_logRateConf;
    NSArray *_lp_hook_host_list;
    NSString *_lp_hook_reg_rule;
    long long _splashCardShowMaxCount;
    long long _precacheBrandVideoCount;
    long long _playable_landing_cache_count;
    unsigned long long _interstitialShowType;
    long long _adlog_enable_type;
    long long _adlog_interval;
    long long _adlog_batch;
    long long _adlog_exception_batch;
    long long _adlog_debug;
    NSDictionary *_setting;
    NSArray *_localNetworkIdList;
    NSDate *_sendDate;
    NSLock *_consentUrlLock;
}

+ (void)_reportCryptStatsWithError:(id)arg1;
+ (void)deleteLocalSetting;
+ (id)service;
+ (id)shouldEvaluateActLogJsWith:(id)arg1;
+ (id)jsActLogURLString;
- (void).cxx_destruct;
@property(nonatomic) _Bool activeFromBackground; // @synthesize activeFromBackground=_activeFromBackground;
@property(retain, nonatomic) NSLock *consentUrlLock; // @synthesize consentUrlLock=_consentUrlLock;
@property(nonatomic) _Bool haveSending; // @synthesize haveSending=_haveSending;
@property(retain) NSDate *sendDate; // @synthesize sendDate=_sendDate;
@property(copy) NSArray *localNetworkIdList; // @synthesize localNetworkIdList=_localNetworkIdList;
@property(copy) NSDictionary *setting; // @synthesize setting=_setting;
@property long long adlog_debug; // @synthesize adlog_debug=_adlog_debug;
@property long long adlog_exception_batch; // @synthesize adlog_exception_batch=_adlog_exception_batch;
@property long long adlog_batch; // @synthesize adlog_batch=_adlog_batch;
@property long long adlog_interval; // @synthesize adlog_interval=_adlog_interval;
@property(nonatomic) long long adlog_enable_type; // @synthesize adlog_enable_type=_adlog_enable_type;
@property(nonatomic) unsigned long long interstitialShowType; // @synthesize interstitialShowType=_interstitialShowType;
@property(nonatomic) long long playable_landing_cache_count; // @synthesize playable_landing_cache_count=_playable_landing_cache_count;
@property(nonatomic) long long precacheBrandVideoCount; // @synthesize precacheBrandVideoCount=_precacheBrandVideoCount;
@property(nonatomic) long long splashCardShowMaxCount; // @synthesize splashCardShowMaxCount=_splashCardShowMaxCount;
@property(copy) NSString *lp_hook_reg_rule; // @synthesize lp_hook_reg_rule=_lp_hook_reg_rule;
@property(retain) NSArray *lp_hook_host_list; // @synthesize lp_hook_host_list=_lp_hook_host_list;
@property(retain) CSJLogRateConfigModel *logRateConf; // @synthesize logRateConf=_logRateConf;
@property(copy) NSArray *network_id_list; // @synthesize network_id_list=_network_id_list;
@property(retain) CSJClogConfigModel *clogConfig; // @synthesize clogConfig=_clogConfig;
@property(retain) CSJInsertJSConfigModel *insertJSConfig; // @synthesize insertJSConfig=_insertJSConfig;
@property(nonatomic) long long enable_bw_screen_detection; // @synthesize enable_bw_screen_detection=_enable_bw_screen_detection;
@property(nonatomic) long long sdMaxMemoryCost; // @synthesize sdMaxMemoryCost=_sdMaxMemoryCost;
@property(nonatomic) long long video_cache_other_num; // @synthesize video_cache_other_num=_video_cache_other_num;
@property(nonatomic) long long video_cache_brand_num; // @synthesize video_cache_brand_num=_video_cache_brand_num;
@property(nonatomic) long long video_cache_reward_num; // @synthesize video_cache_reward_num=_video_cache_reward_num;
@property(nonatomic) long long video_cache_splash_num; // @synthesize video_cache_splash_num=_video_cache_splash_num;
@property(nonatomic) long long sdMaxMemoryCount; // @synthesize sdMaxMemoryCount=_sdMaxMemoryCount;
@property(nonatomic) _Bool lpNewStyle; // @synthesize lpNewStyle=_lpNewStyle;
@property(readonly, nonatomic) _Bool isInitCrashModule; // @synthesize isInitCrashModule=_isInitCrashModule;
@property(nonatomic) long long rotateBannerDislike; // @synthesize rotateBannerDislike=_rotateBannerDislike;
@property(nonatomic) long long webViewRenderMaxConcurrentOperationCount; // @synthesize webViewRenderMaxConcurrentOperationCount=_webViewRenderMaxConcurrentOperationCount;
@property(nonatomic) long long webViewPoolCacheMaxCount; // @synthesize webViewPoolCacheMaxCount=_webViewPoolCacheMaxCount;
@property(nonatomic) long long dynamic_code_group_cache_time; // @synthesize dynamic_code_group_cache_time=_dynamic_code_group_cache_time;
@property(nonatomic) _Bool disable_dynamic_code_group; // @synthesize disable_dynamic_code_group=_disable_dynamic_code_group;
@property(copy) NSArray *gecko_hosts; // @synthesize gecko_hosts=_gecko_hosts;
@property(nonatomic) long long icon_show_time; // @synthesize icon_show_time=_icon_show_time;
@property(copy) NSArray *scheme_wlist; // @synthesize scheme_wlist=_scheme_wlist;
@property(nonatomic) long long circle_splash; // @synthesize circle_splash=_circle_splash;
@property(nonatomic) long long circle_time; // @synthesize circle_time=_circle_time;
@property(copy) NSString *force_language; // @synthesize force_language=_force_language;
@property(nonatomic) long long fetch_tpl_timeout_ctrl; // @synthesize fetch_tpl_timeout_ctrl=_fetch_tpl_timeout_ctrl;
@property(nonatomic) long long max_tpl_cnts; // @synthesize max_tpl_cnts=_max_tpl_cnts;
@property(copy) NSString *privacy_url; // @synthesize privacy_url=_privacy_url;
@property(nonatomic) long long supportTNC; // @synthesize supportTNC=_supportTNC;
@property(nonatomic) long long bothOpen; // @synthesize bothOpen=_bothOpen;
@property(copy) NSDictionary *headersExt; // @synthesize headersExt=_headersExt;
@property(nonatomic) _Bool checkTypeOpen; // @synthesize checkTypeOpen=_checkTypeOpen;
@property(copy) NSString *purePyloadH5; // @synthesize purePyloadH5=_purePyloadH5;
@property(copy) NSArray *playableInterceptAry; // @synthesize playableInterceptAry=_playableInterceptAry;
@property(retain) CSJABTest *abtest; // @synthesize abtest=_abtest;
@property(nonatomic) _Bool collectCrash; // @synthesize collectCrash=_collectCrash;
@property(nonatomic) _Bool isGrey; // @synthesize isGrey=_isGrey;
@property(nonatomic) _Bool silenceSDK; // @synthesize silenceSDK=_silenceSDK;
@property(copy) NSString *apmOverseaUrl; // @synthesize apmOverseaUrl=_apmOverseaUrl;
@property(nonatomic) _Bool pitaya_init; // @synthesize pitaya_init=_pitaya_init;
@property(copy) NSString *cohort_id; // @synthesize cohort_id=_cohort_id;
@property(copy) NSString *appLogUrl; // @synthesize appLogUrl=_appLogUrl;
@property(nonatomic) _Bool isReadVideoFromCache; // @synthesize isReadVideoFromCache=_isReadVideoFromCache;
@property(retain) NSNumber *vbtt; // @synthesize vbtt=_vbtt;
@property(copy) NSDictionary *policy; // @synthesize policy=_policy;
@property(copy) NSString *xpath; // @synthesize xpath=_xpath;
@property(retain) BUThreadSafeDictionary *configList; // @synthesize configList=_configList;
@property(copy) NSString *pitaya_cer_host; // @synthesize pitaya_cer_host=_pitaya_cer_host;
@property(copy) NSString *pitaya_host; // @synthesize pitaya_host=_pitaya_host;
- (void)pbu_resetFetchSetting;
- (void)pbu_anchorFetchSetting;
- (_Bool)pbu_canFetchSetting;
- (id)pbu_requestParams;
- (id)appRequestFieldsAllowed;
- (void)appDidBecomeActive:(id)arg1;
- (void)appWillEnterForeground:(id)arg1;
- (void)insertConfigureRitWith:(id)arg1;
- (void)_setUpCacheConfigData;
- (void)_checkNetworkConfig;
- (id)_readLocalNetworkConfig;
- (void)switchWithRequest:(id)arg1 settingString:(id)arg2;
- (id)modelWithRit:(id)arg1;
@property(copy) NSString *adsUrl; // @synthesize adsUrl=_adsUrl;
@property(copy) NSString *dyn_draw_engine_url;
@property(copy) NSString *consent_url; // @synthesize consent_url=_consent_url;
- (void)setRitModelConfigList:(id)arg1;
- (_Bool)hasWebViewRenderConcurrentFunction;
- (void)receiveToleranceCrashNotification:(id)arg1;
- (void)observeToleranceCrashNotification;
- (id)saveForceLanguageAndFetchNewLanguageWithLanguage:(id)arg1;
- (void)updateSetting:(id)arg1;
- (void)updateTime;
- (void)updateNetworkIdListDefaultValue;
- (void)fetchSetting;
- (void)buildupService;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

