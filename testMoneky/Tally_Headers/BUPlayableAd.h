//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class BUPlayableSafeArray, BUPlayableSafeDictionary, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, NSTimer, UIScrollView, UIView, UIViewController;
@protocol BUPInnerContainerProtocol, BUPlayableAdDelegate;

@interface BUPlayableAd : NSObject
{
    struct {
        _Bool webViewDidStartLoadFlag;
        _Bool webViewDidFinishLoadFlag;
        _Bool webViewDidFailLoadWithErrorFlag;
        _Bool webViewDidClose;
    } flags;
    _Bool _manualRegisterJSB;
    _Bool _isPrerender;
    _Bool _mute;
    _Bool _isContainerViewShow;
    _Bool _disablePlayableClickReport;
    _Bool _isDebug;
    _Bool _firstViewable;
    _Bool _loadJSSDKSuccess;
    _Bool _hasHandleError;
    unsigned long long _renderType;
    unsigned long long _scenesType;
    UIView *_containerView;
    UIViewController *_viewController;
    UIView *_containerSuperView;
    UIViewController *_containerViewController;
    UIScrollView *_feedScrollView;
    id <BUPlayableAdDelegate> _delegate;
    NSString *_playableStyle;
    NSString *_idfaString;
    NSString *_deviceId;
    NSDictionary *_appInfoExt;
    NSString *_playable_url;
    NSString *_geckoKey;
    NSString *_geckoChannel;
    NSString *_gameId;
    NSDictionary *_hg_params;
    NSString *_appName;
    double _containerTimeout;
    double _jsSDKTimeout;
    NSString *_cid;
    NSArray *_playableAdAllPiperArray;
    id <BUPInnerContainerProtocol> _playableContainer;
    BUPlayableSafeDictionary *_logDictinary;
    BUPlayableSafeArray *_interceptArray;
    BUPlayableSafeArray *_switchBackgroundArray;
    NSMutableDictionary *_logH5Dictinary;
    NSString *_session_id;
    long long _page_show_timestamp;
    long long _page_load_timestamp;
    long long _page_viewable_timestamp;
    long long _page_viewable_renderStart;
    long long _page_viewable_renderFinish;
    long long _page_show_duration;
    long long _res_request_times;
    long long _res_hit_times;
    NSTimer *_jsbConnectingTimer;
    long long _webViewStatus;
    NSArray *_hostExistPiperArray;
    NSMutableArray *_playableAdJSBArray;
}

+ (id)shareProcessPool;
- (void).cxx_destruct;
@property _Bool hasHandleError; // @synthesize hasHandleError=_hasHandleError;
@property(nonatomic) _Bool loadJSSDKSuccess; // @synthesize loadJSSDKSuccess=_loadJSSDKSuccess;
@property(retain, nonatomic) NSMutableArray *playableAdJSBArray; // @synthesize playableAdJSBArray=_playableAdJSBArray;
@property(copy, nonatomic) NSArray *hostExistPiperArray; // @synthesize hostExistPiperArray=_hostExistPiperArray;
@property(nonatomic) long long webViewStatus; // @synthesize webViewStatus=_webViewStatus;
@property(retain, nonatomic) NSTimer *jsbConnectingTimer; // @synthesize jsbConnectingTimer=_jsbConnectingTimer;
@property(nonatomic) _Bool firstViewable; // @synthesize firstViewable=_firstViewable;
@property(nonatomic) long long res_hit_times; // @synthesize res_hit_times=_res_hit_times;
@property(nonatomic) long long res_request_times; // @synthesize res_request_times=_res_request_times;
@property(nonatomic) long long page_show_duration; // @synthesize page_show_duration=_page_show_duration;
@property(nonatomic) long long page_viewable_renderFinish; // @synthesize page_viewable_renderFinish=_page_viewable_renderFinish;
@property(nonatomic) long long page_viewable_renderStart; // @synthesize page_viewable_renderStart=_page_viewable_renderStart;
@property(nonatomic) long long page_viewable_timestamp; // @synthesize page_viewable_timestamp=_page_viewable_timestamp;
@property(nonatomic) long long page_load_timestamp; // @synthesize page_load_timestamp=_page_load_timestamp;
@property(nonatomic) long long page_show_timestamp; // @synthesize page_show_timestamp=_page_show_timestamp;
@property(copy, nonatomic) NSString *session_id; // @synthesize session_id=_session_id;
@property(retain, nonatomic) NSMutableDictionary *logH5Dictinary; // @synthesize logH5Dictinary=_logH5Dictinary;
@property(retain, nonatomic) BUPlayableSafeArray *switchBackgroundArray; // @synthesize switchBackgroundArray=_switchBackgroundArray;
@property(retain, nonatomic) BUPlayableSafeArray *interceptArray; // @synthesize interceptArray=_interceptArray;
@property(retain, nonatomic) BUPlayableSafeDictionary *logDictinary; // @synthesize logDictinary=_logDictinary;
@property(retain, nonatomic) id <BUPInnerContainerProtocol> playableContainer; // @synthesize playableContainer=_playableContainer;
@property(copy, nonatomic) NSArray *playableAdAllPiperArray; // @synthesize playableAdAllPiperArray=_playableAdAllPiperArray;
@property(copy, nonatomic) NSString *cid; // @synthesize cid=_cid;
@property(nonatomic) _Bool isDebug; // @synthesize isDebug=_isDebug;
@property(nonatomic) _Bool disablePlayableClickReport; // @synthesize disablePlayableClickReport=_disablePlayableClickReport;
@property(nonatomic) double jsSDKTimeout; // @synthesize jsSDKTimeout=_jsSDKTimeout;
@property(nonatomic) double containerTimeout; // @synthesize containerTimeout=_containerTimeout;
@property(nonatomic) _Bool isContainerViewShow; // @synthesize isContainerViewShow=_isContainerViewShow;
@property(nonatomic) _Bool mute; // @synthesize mute=_mute;
@property(copy, nonatomic) NSString *appName; // @synthesize appName=_appName;
@property(copy, nonatomic) NSDictionary *hg_params; // @synthesize hg_params=_hg_params;
@property(copy, nonatomic) NSString *gameId; // @synthesize gameId=_gameId;
@property(copy, nonatomic) NSString *geckoChannel; // @synthesize geckoChannel=_geckoChannel;
@property(copy, nonatomic) NSString *geckoKey; // @synthesize geckoKey=_geckoKey;
@property(copy, nonatomic) NSString *playable_url; // @synthesize playable_url=_playable_url;
@property(copy, nonatomic) NSDictionary *appInfoExt; // @synthesize appInfoExt=_appInfoExt;
@property(copy, nonatomic) NSString *deviceId; // @synthesize deviceId=_deviceId;
@property(copy, nonatomic) NSString *idfaString; // @synthesize idfaString=_idfaString;
@property(copy, nonatomic) NSString *playableStyle; // @synthesize playableStyle=_playableStyle;
@property(nonatomic) __weak id <BUPlayableAdDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak UIScrollView *feedScrollView; // @synthesize feedScrollView=_feedScrollView;
@property(nonatomic) __weak UIViewController *containerViewController; // @synthesize containerViewController=_containerViewController;
@property(retain, nonatomic) UIView *containerSuperView; // @synthesize containerSuperView=_containerSuperView;
@property(nonatomic) _Bool isPrerender; // @synthesize isPrerender=_isPrerender;
@property(nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
@property(nonatomic) unsigned long long scenesType; // @synthesize scenesType=_scenesType;
@property(readonly, nonatomic) _Bool manualRegisterJSB; // @synthesize manualRegisterJSB=_manualRegisterJSB;
@property(readonly, nonatomic) unsigned long long renderType; // @synthesize renderType=_renderType;
@property(readonly, nonatomic) _Bool isPlayableShow;
- (void)handleContainerViewChanged:(struct CGRect)arg1 visibleFrame:(struct CGRect)arg2;
- (id)convertContainerViewChangedParams:(struct CGRect)arg1 visibleFrame:(struct CGRect)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)netWorkStatus;
- (void)changePlayableClick:(_Bool)arg1;
- (void)loadPlayableAdUrl:(id)arg1;
- (id)appInfoDictionary;
- (void)appWillTerminateNotification:(id)arg1;
- (void)appWillEnterForegroundNotification:(id)arg1;
- (void)appDidEnterBackgroundNotification:(id)arg1;
- (void)configWithContainerView:(id)arg1;
- (void)updateInnerContainerViewFrame:(struct CGRect)arg1;
- (void)excuteJavaScriptMethod;
- (void)registerPiperBridge;
- (void)resetVariables;
- (id)initWithExistPiperArray:(id)arg1 piperDelegate:(id)arg2 type:(unsigned long long)arg3 manualRegisterJSB:(_Bool)arg4;
- (id)initWithExistPiperArray:(id)arg1 piperDelegate:(id)arg2 type:(unsigned long long)arg3;
- (id)initWithExistPiperArray:(id)arg1 piperDelegate:(id)arg2;
- (void)dealloc;
- (void)handleJSRunStuck;
- (void)runTimer;
- (_Bool)isPlayableURL;
- (void)stopDetect;
- (void)startDetect;
- (void)setDetectStatus:(unsigned long long)arg1;
- (unsigned long long)detectStatus;
- (void)setDetectTimer:(id)arg1;
- (id)detectTimer;
- (void)handlePlayablePageStuck;
- (void)handleGlobalPageFailedWithErrorCode:(unsigned long long)arg1;
- (void)handleJSBEvent:(id)arg1 params:(id)arg2;
- (void)handleNativeAppStoreClick;
- (void)handleContainerRenderFaild:(id)arg1 error:(id)arg2;
- (void)handleContainerRenderError:(id)arg1 error:(id)arg2;
- (void)handleContainerRenderFinish:(id)arg1;
- (void)handleContainerRenderStart:(id)arg1;
- (id)logExtraDic;
- (void)handleWebViewInterceptDictWithStartTime:(double)arg1 url:(id)arg2 isCache:(_Bool)arg3 extraDic:(id)arg4;
- (void)handleContainerView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)handleContainerViewDidFinishLoad:(id)arg1;
- (void)handleContainerViewDidStartLoad:(id)arg1;
- (void)handlePlayableViewClose;
- (void)handlePlayableViewFrameChange;
- (void)handlePlayableViewVisible:(long long)arg1;
- (void)handlePlayableViewShow;
- (void)handelPlayableViewFirstVisible;
- (void)testJSContextStuckCompletion:(CDUnknownBlockType)arg1;
- (void)registerPrivateJSMethod;
- (void)excuteJavaScriptMethodInternal;
- (id)unregisteredPiperDict;
- (id)bupl_playable_download_media_in_photosWithParam:(id)arg1;
- (id)bupl_playable_pick_photoWithParam:(id)arg1;
- (id)bupl_playable_open_cameraWithParam:(id)arg1;
- (id)bupl_check_external_storageWithParam:(id)arg1;
- (id)bupl_check_camera_permissionWithParam:(id)arg1;
- (id)bupl_logWithParam:(id)arg1;
- (id)bupl_playable_ready_eventWithParam:(id)arg1;
- (void)connectingLynxJsb;
- (void)connectToLynxJsbEnv;
- (id)bupl_detect_change_playable_clickWithParam:(id)arg1;
- (id)bupl_playable_tool_heart_beatWithParam:(id)arg1;
- (id)bupl_playable_tool_freezeWithParam:(id)arg1;
- (id)bupl_playble_tool_lagWithParam:(id)arg1;
- (id)bupl_openAdLandPageLinksWithParam:(id)arg1;
- (id)bupl_preload_app_adWithParam:(id)arg1;
- (id)bupl_closeWithParam:(id)arg1;
- (id)bupl_reportAdWithParam:(id)arg1;
- (id)bupl_preventTouchEventWithParam:(id)arg1;
- (id)bupl_close_rotation_vector_observerWithParam:(id)arg1;
- (id)bupl_start_rotation_vector_observerWithParam:(id)arg1;
- (id)bupl_close_accelerometer_grativityless_observerWithParam:(id)arg1;
- (id)bupl_start_accelerometer_grativityless_observerWithParam:(id)arg1;
- (id)bupl_close_gyro_observerWithParam:(id)arg1;
- (id)bupl_start_gyro_observerWithParam:(id)arg1;
- (id)bupl_close_accelerometer_observerWithParam:(id)arg1;
- (id)bupl_start_accelerometer_observerWithParam:(id)arg1;
- (id)bupl_device_shake_shortWithParam:(id)arg1;
- (id)bupl_device_shakeWithParam:(id)arg1;
- (id)bupl_getScreenSizeWithParam:(id)arg1;
- (id)bupl_getVolumeWithParam:(id)arg1;
- (id)bupl_sendRewardWithParam:(id)arg1;
- (id)bupl_playable_styleWithParam:(id)arg1;
- (id)bupl_isViewableWithParam:(id)arg1;
- (id)bupl_webview_time_trackWithParam:(id)arg1;
- (id)bupl_open_app_storeWithParam:(id)arg1;
- (id)bupl_playableSDKInfoWithParam:(id)arg1;
- (id)bupl_appInfoWithParam:(id)arg1;
- (id)bupl_adInfoWithParam:(id)arg1;
- (id)bupl_material_render_resultWithParam:(id)arg1;
- (id)bupl_jssdk_load_finishWithParam:(id)arg1;
- (id)bupl_get_viewportWithParam:(id)arg1;
- (id)bupl_playable_eventWithParam:(id)arg1;
- (id)excuteJSBMethod:(id)arg1 params:(id)arg2;
- (_Bool)responseToJSBMethod:(id)arg1;
- (void)fireEvent:(id)arg1 params:(id)arg2;
- (void)registerPiperBridgeInternal;
- (void)handlePlayableHardWareDetectTrackEvent;
- (void)handlePlayablePageStuckTrackEvent;
- (void)handleGlobalPageFailedTrackEventWithErrorCode:(unsigned long long)arg1;
- (void)handleJSBEventTrackEvent:(id)arg1 params:(id)arg2;
- (void)handleNativeAppStoreClickTrackEvent;
- (void)handleContainerRenderFaildTrackEventWithError:(id)arg1;
- (void)handleContainerRenderErrorTrackEventWithError:(id)arg1;
- (void)handleContainerRenderFinishTrackEvent;
- (void)handleContainerRenderStartTrackEvent;
- (void)handleContainerViewDidFailLoadTrackEventWithError:(id)arg1;
- (void)handleContainerViewDidFinishLoadTrackEvent;
- (void)handleContainerViewDidStartLoadTrackEvent;
- (void)handlePlayableViewClosedTrackEvent;
- (void)handlePlayableViewTrackEventWithVisible:(long long)arg1;
- (void)handelPlayableViewFirstVisibleTrackEvent;
- (id)publicParameters:(double)arg1;
- (void)jsCallNative_webview_time_trackWithParams:(id)arg1;
- (void)switchBackgroundAndForegroundLog:(id)arg1 extraDic:(id)arg2;
- (double)currentTime;
- (id)interceptDictWithStartTime:(double)arg1 url:(id)arg2 type:(id)arg3 isCache:(_Bool)arg4 extraDic:(id)arg5;
- (void)setCurrentLogType:(id)arg1 extraDic:(id)arg2;
- (void)trackEvent:(id)arg1 params:(id)arg2;
- (void)csj_fireEvent:(id)arg1 params:(id)arg2;
- (_Bool)csj_responseToJSBMethod:(id)arg1;
- (id)csj_excuteJSBMethod:(id)arg1 params:(id)arg2;

@end

