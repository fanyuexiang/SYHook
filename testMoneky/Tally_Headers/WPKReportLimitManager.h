//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, NSString;

@interface WPKReportLimitManager : NSObject
{
    _Bool _enableLimitForUserReport;
    _Bool _isSaveing;
    NSString *_currentComponentsString;
    NSMutableDictionary *_userReportConfigDic;
    long long _userReportMaxLimit;
    unsigned long long _userReportMaxMeger;
}

+ (void)setMegerForUserReport:(unsigned long long)arg1;
+ (_Bool)maxLimitForUserReport;
+ (void)increaseForUserReport;
+ (void)setMaxLimitForUserReport:(int)arg1;
+ (void)enableLimitForUserReport:(_Bool)arg1;
+ (void)enableLimit:(_Bool)arg1 reportLimitType:(long long)arg2;
+ (void)setMergerConfig:(unsigned long long)arg1 reportLimitType:(long long)arg2;
+ (_Bool)maxLimitWithReportLimitType:(long long)arg1;
+ (void)increaseWithReportLimitType:(long long)arg1;
+ (void)setMaxLimit:(int)arg1 reportLimitType:(long long)arg2;
+ (id)configFilePathWithReportLimitType:(long long)arg1;
+ (id)configFileDirectoryPath;
+ (id)mainDirectoryPath;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property _Bool isSaveing; // @synthesize isSaveing=_isSaveing;
@property(nonatomic) _Bool enableLimitForUserReport; // @synthesize enableLimitForUserReport=_enableLimitForUserReport;
@property(nonatomic) unsigned long long userReportMaxMeger; // @synthesize userReportMaxMeger=_userReportMaxMeger;
@property(nonatomic) long long userReportMaxLimit; // @synthesize userReportMaxLimit=_userReportMaxLimit;
@property(retain, nonatomic) NSMutableDictionary *userReportConfigDic; // @synthesize userReportConfigDic=_userReportConfigDic;
@property(retain, nonatomic) NSString *currentComponentsString; // @synthesize currentComponentsString=_currentComponentsString;
- (void)handleWillTerminateNotification:(id)arg1;
- (void)handleWillResignActiveNotification:(id)arg1;
- (void)enableLimit:(_Bool)arg1 reportLimitType:(long long)arg2;
- (_Bool)maxLimitWithReportLimitType:(long long)arg1;
- (void)increaseWithReportLimitType:(long long)arg1;
- (void)setMaxLimit:(int)arg1 reportLimitType:(long long)arg2;
- (void)saveConfigWithReportLimitType:(long long)arg1;
- (void)loadConfigWithReportLimitType:(long long)arg1;
- (void)setMergerConfig:(unsigned long long)arg1 reportLimitType:(long long)arg2;
- (void)mergerConfigWithReportLimitType:(long long)arg1;
- (void)enableLimitForUserReport:(_Bool)arg1;
- (_Bool)maxUserReportLimit;
- (void)increaseUserReportIfNotExist;
- (void)saveUserReportConfig;
- (void)loadUserReportConfig;
- (id)userReportFilePath;
- (void)mergeUserReportConfig;
- (void)setMergeUserReportConfig:(unsigned long long)arg1;
- (id)init;

@end

